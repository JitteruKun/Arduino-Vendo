
#include <Keypad.h>
#include <Servo.h>
#include <LiquidCrystal_I2C.h>

#define ROW_NUM    4  // four rows
#define COLUMN_NUM 4  // four columns
#define SERVO_PIN_1  A0 // the Arduino pin, which connects to the first servo motor
#define SERVO_PIN_2  A1 // the Arduino pin, which connects to the second servo motor
#define SERVO_PIN_3 A2 //  the Arduino pin, which connects to the third servo motor
#define SERVO_PIN_4 A3 //  the Arduino pin, which connects to the fourth servo motor

Servo servo1; // first servo motor
Servo servo2; // second servo motor
Servo servo3; // third servo motor
Servo servo4; // fourth servo motor



char keys[ROW_NUM][COLUMN_NUM] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

byte pin_rows[ROW_NUM] = {9, 8, 7, 6}; //connect to the row pinouts of the keypad
byte pin_column[COLUMN_NUM] = {5, 4, 3, 2}; //connect to the column pinouts of the keypad

// Define your keypad and LCD
Keypad kp = Keypad(makeKeymap(keys), pin_rows, pin_column, ROW_NUM, COLUMN_NUM);
LiquidCrystal_I2C lcd(0x27, 16, 2); // Set the LCD address to 0x27 for a 16 chars and 2 line display

const String password_1 = "A1"; // input for first servo
const String password_2 = "A2"; // input for second servo
const String password_3 = "B1"; // input for third servo
const String password_4 = "B2";// input for fourth servo
String input_password;

int angle1 = 0; // the current angle of first servo motor
int angle2 = 0; // the current angle of second servo motor
int angle3 = 0; // the current angle of third servo motor
int angle4 = 0; // the current angle of fourth servo motor
unsigned long lastTime1;
unsigned long lastTime2;
unsigned long lastTime3;
unsigned long lastTime4;

void setup() {
  
  lcd.init();                      // Initialize LCD
  lcd.backlight();                 // Turn on backlight
  
  Serial.begin(9600);
  input_password.reserve(32); // maximum password size is 32, change if needed

  servo1.attach(SERVO_PIN_1);
  servo1.write(0); // rotate first servo motor to 0°
  lastTime1 = millis();

  servo2.attach(SERVO_PIN_2);
  servo2.write(0); // rotate second servo motor to 0°
  lastTime2 = millis();
  
  servo3.attach(SERVO_PIN_3);
  servo3.write(0); // rotate third servo motor to 0°
  lastTime3 = millis();
  
  servo4.attach(SERVO_PIN_4);
  servo4.write(0); // rotate fourth servo motor to 0°
  lastTime4 = millis();
}

void loop() {
  char key = kp.getKey();

  if (key) {
    Serial.print(key);
    lcd.print(key);

    if (key == '*') {
      input_password = ""; // reset the input password
    } else if (key == '#') {
      lcd.clear(); // Clear the LCD display before printing new information
      if (input_password == password_1) {
        lcd.print("Processing Servo 1");
        Serial.println("The password for Servo 1 is correct, rotating Servo 1 to 90°");
        angle1 = 180;
        servo1.write(angle1);
        lastTime1 = millis();
      } else if (input_password == password_2) {
        lcd.print("Processing Servo 2");
        Serial.println("The password for Servo 2 is correct, rotating Servo 2 to 90°");
        angle2 = 180;
        servo2.write(angle2);
        lastTime2 = millis();
      } else if (input_password == password_3) {
        lcd.print("Processing Servo 3");
        Serial.println("The password for Servo 3 is correct, rotating Servo 3 to 90°");
        angle3 = 180;
        servo3.write(angle3);
        lastTime3 = millis();
      } else if (input_password == password_4) {
        lcd.print("Processing Servo 4");
        Serial.println("The password for Servo 4 is correct, rotating Servo 4 to 90°");
        angle4 = 180;
        servo4.write(angle4);
        lastTime4 = millis();
      } else {
        lcd.print("Incorrect Password");
        Serial.println("The password is incorrect, try again");
      }

      input_password = "*"; // reset the input password
    } else {
      input_password += key; // append new character to input password string
    }
  }

  if (angle1 == 180 && (millis() - lastTime1) > 2000) { // 5 seconds	
    angle1 = 0;
    servo1.write(angle1);
    Serial.println("Rotating Servo 1 to 0°");
  }

  if (angle2 == 180 && (millis() - lastTime2) > 2000) { // 5 seconds
    angle2 = 0;
    servo2.write(angle2);
    Serial.println("Rotating Servo 2 to 0°");
  }
  if (angle3 == 180 && (millis() - lastTime3) > 2000) { // 5 seconds
    angle3 = 0;
    servo3.write(angle3);
    Serial.println("Rotating Servo 3 to 0°");
  }
  if (angle4 == 180 && (millis() - lastTime4) > 2000) { // 5 seconds
    angle4 = 0;
    servo4.write(angle4);
    Serial.println("Rotating Servo 4 to 0°");
  }
}


